{"version":3,"file":"static/webpack/static/development/pages/blog/[slug].js.30c97d6fdc692d6d03e5.hot-update.js","sources":["webpack:///./pages/blog/[slug].js"],"sourcesContent":["import fs from \"fs\";\nimport Head from \"next/head\";\nimport Markdown from \"../../components/Markdown\";\n\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  H2,\n  Text,\n  Paragraph,\n  H1,\n  Link\n} from \"@vandebron/windmolen\";\nimport { composePostMetaData } from \"../../utils\";\n\nexport default function BlogPosts({ post }) {\n  const { title, description, coverImage, author, formattedDate, imageSource } = post.meta;\n\n  const image = require(`../../public/${coverImage}`);\n\n  return (\n    <>\n      <Head>\n        <title>{title}</title>\n        <meta name=\"Description\" content={description} />\n        <meta property=\"og:image\" content={`https://www.vandebron.tech${coverImage}`} key=\"ogimage\" />\n      </Head>\n\n      <Container>\n        <Row>\n          <Col col={12}>\n            <H2>{title}</H2>\n          </Col>\n          <Col col={12}>\n            <Paragraph>\n              <Text>{`By ${author} on ${formattedDate}`}</Text>\n            </Paragraph>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col col={12}>\n          <Paragraph>\n          <Image\n              aspectRatio=\"2:1\"\n              src={image}\n              srcSet={image.srcSet}\n              alt={title}\n            />\n           \n              {imageSource && <Link href={imageSource}>Image source</Link>}\n            </Paragraph>\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: 60 }}>\n          <Col col={12}>\n            <Markdown>{post.content}</Markdown>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\n// This function gets called at build time and generates the list of blog posts\nexport async function getStaticPaths() {\n  const files = fs.readdirSync(`${process.cwd()}/public/posts`);\n\n  // Get the paths we want to pre-render based on posts\n  const paths = files.map((filename) => {\n    return {\n      params: { slug: filename.replace(\".md\", \"\") },\n    };\n  });\n\n  // We'll pre-render only these paths at build time.\n  return { paths, fallback: false }; // redirect other routes to a 404\n}\n\nexport function getStaticProps({ params }) {\n  const post = composePostMetaData(`${params.slug}.md`);\n\n  return {\n    props: {\n      post,\n    },\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;A","sourceRoot":""}