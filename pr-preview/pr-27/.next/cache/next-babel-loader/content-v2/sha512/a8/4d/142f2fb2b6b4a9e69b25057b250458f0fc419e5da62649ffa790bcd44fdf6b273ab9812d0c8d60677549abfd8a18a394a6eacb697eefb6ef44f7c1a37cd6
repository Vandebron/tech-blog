{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport ReactMarkdown from \"react-markdown\";\nimport { H1, H2, H3, H4, H5, Paragraph } from \"@vandebron/windmolen\";\nimport { PrismAsync as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { okaidia } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\nexport default function Markdown({\n  children\n}) {\n  return __jsx(ReactMarkdown, {\n    source: children,\n    renderers: {\n      thematicBreak: React.Fragment,\n      heading: ({\n        children,\n        level\n      }) => {\n        const levels = {\n          1: H1,\n          2: H2,\n          3: H3,\n          4: H4,\n          5: H5\n        };\n        const Heading = levels[level];\n        return __jsx(Heading, null, children);\n      },\n      paragraph: props => __jsx(Paragraph, props),\n      list: ({\n        children\n      }) => __jsx(\"ul\", {\n        style: {\n          marginBlockStart: 0,\n          marginBlockEnd: 30\n        }\n      }, children),\n      listItem: ({\n        children\n      }) => __jsx(Paragraph, {\n        as: \"li\",\n        style: {\n          marginBottom: 0\n        }\n      }, children),\n      link: (_ref) => {\n        let {\n          children\n        } = _ref,\n            props = _objectWithoutProperties(_ref, [\"children\"]);\n\n        return __jsx(\"a\", _extends({}, props, {\n          style: {\n            color: \"inherit\"\n          }\n        }), children);\n      },\n      code: ({\n        language,\n        value\n      }) => __jsx(React.Fragment, null, __jsx(SyntaxHighlighter, {\n        language: language,\n        style: okaidia,\n        children: value\n      }), __jsx(\"br\", null)),\n      inlineCode: ({\n        children\n      }) => __jsx(\"code\", {\n        style: {\n          background: \"rgb(0,0,0, 0.1)\",\n          padding: \"2px 4px\",\n          fontSize: \"80%\",\n          color: \"#000\"\n        }\n      }, children),\n      image: ({\n        alt,\n        src\n      }) => __jsx(\"img\", {\n        src: src,\n        alt: alt,\n        style: {\n          width: \"100%\"\n        }\n      })\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}