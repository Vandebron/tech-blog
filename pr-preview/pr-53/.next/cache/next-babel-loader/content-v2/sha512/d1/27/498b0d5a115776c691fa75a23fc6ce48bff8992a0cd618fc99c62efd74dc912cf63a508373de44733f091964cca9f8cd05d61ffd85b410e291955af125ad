{"ast":null,"code":"import _defineProperty from \"/home/runner/work/tech-blog/tech-blog/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"/home/runner/work/tech-blog/tech-blog/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/home/runner/work/tech-blog/tech-blog/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ReactMarkdown from \"react-markdown\";\nimport { H1, H2, H3, H4, H5, Table, Paragraph } from \"@vandebron/windmolen\";\nimport { PrismAsync as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { okaidia } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\nimport rehypeRaw from 'rehype-raw';\nimport remarkGfm from 'remark-gfm';\nexport default function Markdown(_ref) {\n  var children = _ref.children;\n  return __jsx(ReactMarkdown, {\n    children: children,\n    rehypePlugins: [rehypeRaw, remarkGfm],\n    components: {\n      hr: React.Fragment,\n      h1: function h1(_ref2) {\n        var children = _ref2.children;\n        return __jsx(H1, null, children);\n      },\n      h2: function h2(_ref3) {\n        var children = _ref3.children;\n        return __jsx(H2, null, children);\n      },\n      h3: function h3(_ref4) {\n        var children = _ref4.children;\n        return __jsx(H3, null, children);\n      },\n      h4: function h4(_ref5) {\n        var children = _ref5.children;\n        return __jsx(H4, null, children);\n      },\n      h5: function h5(_ref6) {\n        var children = _ref6.children;\n        return __jsx(H5, null, children);\n      },\n      p: function p(props) {\n        return __jsx(Paragraph, props);\n      },\n      ol: function ol(_ref7) {\n        var children = _ref7.children;\n        return __jsx(\"ol\", {\n          style: {\n            marginBlockStart: 0,\n            marginBlockEnd: 30\n          }\n        }, children);\n      },\n      ul: function ul(_ref8) {\n        var children = _ref8.children;\n        return __jsx(\"ol\", {\n          style: {\n            marginBlockStart: 0,\n            marginBlockEnd: 30\n          }\n        }, children);\n      },\n      li: function li(_ref9) {\n        var children = _ref9.children;\n        return __jsx(Paragraph, {\n          as: \"li\",\n          style: {\n            marginBottom: 0\n          }\n        }, children);\n      },\n      a: function a(_ref10) {\n        var children = _ref10.children,\n            props = _objectWithoutProperties(_ref10, [\"children\"]);\n\n        return __jsx(\"a\", _extends({}, props, {\n          style: {\n            color: \"inherit\"\n          },\n          target: 'target' in props || props['href'].includes('#') ? undefined : '_blank'\n        }), children);\n      },\n      code: function code(_ref11) {\n        var node = _ref11.node,\n            inline = _ref11.inline,\n            className = _ref11.className,\n            children = _ref11.children,\n            props = _objectWithoutProperties(_ref11, [\"node\", \"inline\", \"className\", \"children\"]);\n\n        var match = /language-(\\w+)/.exec(className || '');\n        return !inline && match ? __jsx(SyntaxHighlighter, _extends({\n          style: okaidia,\n          language: match[1],\n          PreTag: \"div\",\n          children: String(children).replace(/\\n$/, '')\n        }, props)) : __jsx(\"code\", _extends({\n          className: className\n        }, props, {\n          style: {\n            background: \"rgb(0,0,0, 0.1)\",\n            padding: \"2px 4px\",\n            fontSize: \"80%\",\n            color: \"#000\"\n          }\n        }), children);\n      },\n      img: function img(_ref12) {\n        var src = _ref12.src,\n            alt = _ref12.alt,\n            props = _objectWithoutProperties(_ref12, [\"src\", \"alt\"]);\n\n        return __jsx(\"img\", _extends({\n          src: src,\n          alt: alt,\n          style: {\n            width: \"100%\"\n          }\n        }, props));\n      },\n      table: function table(_ref13) {\n        var children = _ref13.children,\n            className = _ref13.className,\n            style = _ref13.style;\n        return __jsx(Table, {\n          tableStyle: \"solid-borders\",\n          className: className,\n          style: _objectSpread({\n            'borderCollapse': 'collapse',\n            'marginBottom': '5%',\n            'fontSize': '18px',\n            'border': 'none'\n          }, style),\n          align: \"center\"\n        }, children);\n      },\n      thead: function thead(_ref14) {\n        var children = _ref14.children,\n            style = _ref14.style;\n        return __jsx(Table.Thead, {\n          style: _objectSpread({\n            'color': 'black'\n          }, style)\n        }, children);\n      },\n      tbody: function tbody(_ref15) {\n        var children = _ref15.children,\n            style = _ref15.style;\n        return __jsx(Table.Tbody, {\n          style: style\n        }, children);\n      },\n      tr: function tr(_ref16) {\n        var children = _ref16.children,\n            style = _ref16.style;\n        return __jsx(Table.Row, {\n          style: _objectSpread({}, style)\n        }, children);\n      },\n      td: function td(_ref17) {\n        var children = _ref17.children,\n            style = _ref17.style,\n            rest = _objectWithoutProperties(_ref17, [\"children\", \"style\"]);\n\n        return __jsx(Table.Cell, _extends({}, rest, {\n          style: style\n        }), children);\n      },\n      th: function th(_ref18) {\n        var children = _ref18.children,\n            style = _ref18.style;\n        return __jsx(Table.Cell, {\n          style: style\n        }, children);\n      }\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}