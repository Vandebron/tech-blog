{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fs from \"fs\";\nimport matter from \"gray-matter\";\nexport function composePostMetaData(directory, fileName) {\n  var _data$createdAt, _data$createdAt2, _data$createdAt3;\n\n  const markdownWithMetadata = fs.readFileSync(`${process.cwd()}${directory}${fileName}`).toString();\n  const {\n    data,\n    content\n  } = matter(markdownWithMetadata); // Convert post date to format: Month day, Year\n\n  const formattedDate = data === null || data === void 0 ? void 0 : (_data$createdAt = data.createdAt) === null || _data$createdAt === void 0 ? void 0 : _data$createdAt.toLocaleDateString(\"nl-NL\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n  });\n  return {\n    content,\n    meta: _objectSpread(_objectSpread({}, data), {}, {\n      slug: `blog/${fileName.replace(\".md\", \"\")}`,\n      formattedDate: formattedDate || \"\",\n      date: (data === null || data === void 0 ? void 0 : (_data$createdAt2 = data.createdAt) === null || _data$createdAt2 === void 0 ? void 0 : _data$createdAt2.toString()) || \"\",\n      createdAt: (data === null || data === void 0 ? void 0 : (_data$createdAt3 = data.createdAt) === null || _data$createdAt3 === void 0 ? void 0 : _data$createdAt3.toString()) || \"\"\n    })\n  };\n}\nexport default composePostMetaData;","map":null,"metadata":{},"sourceType":"module"}